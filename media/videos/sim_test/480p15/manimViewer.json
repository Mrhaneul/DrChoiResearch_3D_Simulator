{
    "TestScene": "class TestScene(ThreeDScene):\n    def construct(self):\n        self.set_camera_orientation(phi=45 * DEGREES, theta=45 * DEGREES)\n        self.camera.background_color = \"BLACK\"\n        self.length, self.width, self.height = cp.LENGTH, cp.WIDTH, cp.HEIGHT\n        plane = NumberPlane(x_range=[-5, 5], y_range=[-5, 5], background_line_style={\n            \"stroke_color\": cp.PATH_COLOR,\n            \"stroke_width\": cp.PATH_WIDTH,\n        })\n        light_sphere = Sphere(\n            radius=cp.LIGHT_RADIUS,\n            color=cp.LIGHT_COLOR,\n            fill_opacity=1,\n            stroke_color=cp.LIGHT_COLOR,\n            stroke_width = 3\n            )\n        light_sphere.move_to([2, 3, 2])\n        gravity_sphere = gs3d(3000, ORIGIN)\n        gravity_sphere.set_position(ORIGIN)\n        self.add(plane, gravity_sphere)\n        self.add(light_sphere)\n        velocity = np.array([0.0, 0.0, 0.0], dtype=np.float64)\n        def update_sphere(mob, dt):\n            nonlocal velocity\n            force = gravity_sphere.gravitational_pull(mob.get_center())\n            acceleration = np.array(force, dtype=np.float64) * 0.01\n            velocity += acceleration * dt * 0.1\n            mob.shift(velocity * dt)\n            mob.shift(0.5 * RIGHT * dt)\n        light_sphere.add_updater(update_sphere)\n        self.wait(35)\n        light_sphere.clear_updaters()"
}